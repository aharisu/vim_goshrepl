(define-constant %d.m->s% 
'(
(scheme . ("port?" "string>?" ">" "caddr" "integer->char" "force" "values" "exact" "char-whitespace?" "member" "div-and-mod" "char-ci<=?" "write" "log" "newline" "string?" "char>=?" "peek-char" "cos" "cddar" "div0-and-mod0" "vector-length" "char=?" "acos" "boolean?" "<=" "cadaar" ">=" "eqv?" "string-copy" "floor" "cddr" "zero?" "caaadr" "max" "modulo" "eval" "set-cdr!" "with-input-from-file" "/" "substring" "string-ref" "cadddr" "number->string" "symbol?" "rational?" "string-ci>?" "mod" "min" "string<=?" "cdadar" "char-upcase" "call-with-input-file" "for-each" "char-upper-case?" "input-port?" "exact?" "integer-valued?" "char-ci>=?" "exp" "cddadr" "procedure?" "call/cc" "char-ci=?" "eof-object?" "expt" "make-vector" "pair?" "string->symbol" "+" "char<?" "asin" "cdaar" "nearly=?" "-" "string->list" "lcm" "caadr" "eq?" "ceiling" "load" "caaar" "cons" "display" "null-environment" "caar" "cdddr" "call-with-current-continuation" "abs" "integer?" "assoc" "open-output-file" "string->number" "inexact" "write-char" "caadar" "string-set!" "string-ci<=?" "map" "number?" "current-input-port" "string>=?" "cdr" "*" "vector->list" "char-downcase" "vector-ref" "cdaaar" "close-input-port" "char-lower-case?" "cadadr" "positive?" "rational-valued?" "char-alphabetic?" "odd?" "char-ci<?" "exact-integer-sqrt" "cdaddr" "negative?" "char>?" "read" "tan" "mod0" "vector" "list->string" "gcd" "string" "equal?" "truncate" "open-input-file" "<" "cdddar" "numerator" "scheme-report-environment" "cadr" "with-output-to-file" "quotient" "vector-set!" "call-with-output-file" "cadar" "exact->inexact" "string-ci>=?" "complex?" "caaaar" "current-output-port" "string-ci=?" "dynamic-wind" "=" "list->vector" "cdadr" "output-port?" "string<?" "close-output-port" "char->integer" "real-valued?" "char-numeric?" "even?" "caaddr" "make-string" "string=?" "div" "char-ci>?" "sqrt" "char<=?" "read-char" "sin" "div0" "string-append" "vector?" "char?" "string-length" "atan" "caddar" "not" "round" "denominator" "interaction-environment" "cdar" "inexact?" "cddaar" "remainder" "set-car!" "apply" "cdaadr" "symbol->string" "inexact->exact" "cddddr" "char-ready?" "real?" "string-ci<?" "car" "call-with-values" "vector-fill!"))
(gauche.object . ("method-applicable-for-classes?"))
(null . ("let-syntax" "quote" "and" "define-syntax" "begin" "letrec" "let*" "let" "set!" "if" "lambda" "delay" "do" "define" "syntax-rules" "unquote-splicing" "case" "unquote" "cond" "letrec-syntax" "quasiquote" "or"))
(gauche . ("ecase-helper" "integer->digit" "instance-slot-ref" "greatest-fixnum" "sys-readlink" "/." "assv-set!" "SIGPOLL" "modf" "apply-method" "tree-map-predecessor-value" "EEXIST" "copy-bit-field" "add-method!" "debug-print-width" "ENOPKG" "sys-chdir" "<time>" "<io-read-error>" "sys-pause" "<regexp>" "disasm" "keyword->string" "write-object" "infinite?" "slot-ref-using-accessor" "inexact-/" "let1" "use-version" "module-table" "SIGXFSZ" "<%box-meta>" "port-buffering" "tree-map-ceiling-key" "drop-right" "<weak-hash-table-meta>" "EDESTADDRREQ" "lrange" "asinh" "sys-getloadavg" "ENOMEDIUM" "W_OK" "list" "write-to-string" "<lazy-pair>" "get-remaining-input-string" "write/ss" "intersperse" "generator-fold-right" "define-class" "fixnum?" "logior" "module-parents" "SIGTTIN" "library-for-each" "take" "ECONNREFUSED" "<f64vector-meta>" "tree-map-floor" "port->list" "ENOEXEC" "<read-error>" "sys-gmtime" "^s" "<integer>" "open-output-buffered-port" "string-interpolate" "take-right*" "rxmatch-let" "hash-table-for-each" "sys-nanosleep" "rassq" "SIGCHLD" "make-condition-type" "^a" "<f16vector-meta>" "port-fold" "closure-code" "global-variable-ref" "ENOCSI" "<system-error>" "sys-asctime" "sys-getppid" "eqv-hash" "<real>" "rxmatch-case" "string->regexp" "sys-glob" "<generic>" "sys-mkdir" "identity" "errorf" "file-exists?" "SIGPIPE" "sys-setlocale" "extract-condition" "sys-srandom" "^d" "tree-map-pop!" "port-position-prefix" "sys-setenv" "path->module-name" "<serious-condition>" "ENETUNREACH" "set!-values" "current-time" "vm-get-stack-trace-lite" "<number>" "<eof-object>" "sys-stat->mode" "with-exception-handler" "define-reader-ctor" "current-class-of" "port-seek" "sys-stat" "SIGKILL" "<identifier>" "LC_CTYPE" "sys-getenv" "sys-gethostname" "tree-map-put!" "delete-duplicates!" "^g" "rassv-ref" "ENAMETOOLONG" "sys-wait-stopsig" "<dictionary>" "<thread-meta>" "<syntax-pattern>" "<u64vector-meta>" "ECHRNG" "<boolean>" "sys-stat->nlink" "&error" "RLIMIT_RTPRIO" "SIGABRT" "unless" "sys-gid->group-name" "<terminated-thread-exception>" "class-slots" "sys-tmpnam" "^j" "assq-ref" "sys-basename" "EMFILE" "sys-wait-exit-status" "gauche-dso-suffix" "<syntax>" "port-file-number" "char-set-complement!" "<u32vector-meta>" ".$" "EBFONT" "sys-stat->atime" "&i/o-write-error" "regexp-optimize" "SIGINT" "RLIMIT_NICE" "define-macro" "EXDEV" "<join-timeout-exception-meta>" "^m" "alist->hash-table" "ELIBSCN" "export-all" "regexp-replace" "object-*" "case-lambda" "get-keyword" "make-tree-map" "<null>" "open-output-string" "provided?" "sys-fdset-clear!" "find" "<u16vector-meta>" "for-each$" "EBADMSG" "sys-tm->alist" "sort!" "regexp-replace-all*" "split-at*" "string-pointer-copy" "RLIMIT_FSIZE" "symbol-bound?" "EUCLEAN" "<thread-exception>" "get-signal-pending-limit" "hash-table-keys" "when" "SCM_UVECTOR_F64" "identifier->symbol" "profiler-show" "ELIBACC" "EPROTONOSUPPORT" "tree-map-pop-min!" "read-eval-print-loop" "current-load-port" "print" "<list>" "<u8vector-meta>" "fold-left" "EALREADY" "null?" "fold-right$" "stable-sort" "string-pointer-prev!" "syntax-errorf" "RLIMIT_AS" "ETIME" "memv" "debug-print" "get-signal-handler" "hash-table-push!" "export" "SCM_UVECTOR_S64" "object-apply" "EL2HLT" "fluid-let" "EPERM" "tree-map-map" "<hash-table>" "<uvector-meta>" "EADDRNOTAVAIL" "partition$" "list->sys-fdset" "stable-sort-by" "add-load-path" "truncate->exact" "gc" "make-string-pointer" "ESRCH" "reverse" "read-line" "sys-sigset-empty!" "class-slot-set!" "hash-table-put!" "SCM_UVECTOR_S16" "EISNAM" "symbol-sans-prefix" "slot-bound-using-class?" "ecase" "declare" "rxmatch-num-matches" "ENOTUNIQ" "write*" "<sys-group>" "list*" "tree-map->alist" "sys-geteuid" "subtype?" "sys-truncate" "byte-substring" "<tree-map-meta>" "any$" "and-let*" "slot-definition-getter" "port-name" "exit-handler" "get-optional" "string-complete->incomplete" "eof-object" "EROFS" "SIG_UNBLOCK" "sys-getpgrp" "hash-table-type" "weak-vector-set!" "EINVAL" "until" "slot-missing" "ENOTEMPTY" "sys-fork-and-exec" "make-list" "define-generic" "slot-exists?" "filter!" "<symbol-meta>" "assoc$" "foreign-pointer-attribute-set" "sys-wait" "supported-character-encoding?" "standard-input-port" "char-set-copy" "real-part" "EREMCHG" "sys-uid->user-name" "with-input-from-string" "class-direct-supers" "vector-copy" "EIDRM" "cond-list" "compute-applicable-methods" "ENOSYS" "read-reference-value" "length+" "slot-pop!" "<string-meta>" "x->number" "arity" "ucs->char" "port-closed?" "instance-slot-set" "native-endian" "char-general-category" "clamp" "^o" "SIGIO" "ldexp" "gauche-version" "tree-map-successor" "delete-method!" "EFAULT" "bit-field" "ENOPROTOOPT" "sys-chmod" "<io-write-error>" "with-error-to-port" "sys-alarm" "<regexp-meta>" "x->integer" "import" "alist-delete" "arity-at-least-value" "<compiled-code>" "class-of" "nan?" "promise?" "slot-bound-using-accessor?" "+." "SIGVTALRM" "<class>" "sys-localeconv" "port-case-fold-set!" "take!" "tree-map-ceiling-value" "EDOM" "make" "tanh" "sys-getrlimit" "lcons" "ENOMEM" "debug-print-post" "require" "X_OK" "<exception>" "<lazy-pair-meta>" "sys-setpgrp" "generator-fold" "<syntactic-closure>" "<port>" "bignum?" "logxor" "module-precedence-list" "SIGTTOU" "^v" "regexp-replace*" "library-map" "<weak-vector>" "tree-map-floor-key" "ECONNRESET" "port->string" "ENOKEY" "sys-localtime" "<integer-meta>" "drop-right*" "hash-table-fold" "current-module" "macroexpand" "ash" "^y" "SIGCONT" "copy-port" "<f32vector>" "method-code" "ENODATA" "sys-ctime" "define-compiler-macro" "string-incomplete?" "sys-setgid" "hash" "<real-meta>" "open-input-fd-port" "regexp-ast" "glob-fold" "sys-rmdir" "undefined" "define-^x" "SIGALRM" "compute-slot-accessor" "condition-ref" "tree-map-exists?" "port-map" "sys-unsetenv" "subr?" "ENFILE" "time?" "<message-condition>" "slot-definition-allocation" "<number-meta>" "<undefined-object>" "sys-stat->file-type" "sys-normalize-pathname" "with-port-locking" "delete-keywords" "sys-lstat" "SIGUSR1" "LC_MONETARY" "<uncaught-exception-meta>" "sys-abort" "sys-getdomainname" "tree-map-delete!" "profiler-start" "export-if-defined" "ENAVAIL" "all-modules" "sys-time" "<ordered-dictionary>" "current-thread" "<syntax-pattern-meta>" "<f16vector>" "inc!" "boolean" "ECOMM" "<boolean-meta>" "sys-stat->rdev" "&serious" "SEEK_SET" "SIGIOT" "RLIMIT_SIGPENDING" "sys-group-name->gid" "sys-mkstemp" "tree-map-copy" "assv-ref" "EMLINK" "require-extension" "<module-meta>" "sys-wait-signaled?" "<syntax-meta>" "port-fd-dup!" "string-split" "drop" "<s64vector>" "rxmatch-substring" "compose" "EBUSY" "sys-stat->gid" "dolist" "list?" "with-string-io" "open-input-string" "x->string" "cons*" "&i/o-read-error" "SIGQUIT" "RLIMIT_NOFILE" "select-module" "EXFULL" "<abandoned-mutex-exception>" "sys-sigset" "include" "sys-readdir" "rassv" "cute" "object-/" "ELNRNG" "<null-meta>" "sys-fdset-copy!" "<s32vector>" "^_" "lazy" "EBADR" "map$" "sys-stat->type" "regexp-case-fold?" "string-pointer-byte-index" "take*" "rxmatch-cond" "RLIMIT_LOCKS" "EUNATCH" "sys-fork" "sys-sigmask" "hash-table-values" "^" "uvector-length" "ELIBBAD" "EPROTOTYPE" "tree-map-max" "reverse!" "<list-meta>" "<s16vector>" "sys-fdset-ref" "^c" "EBADE" "fold$" "define-values" "push!" "sorted?" "with-output-to-port" "string-pointer-set!" "RLIMIT_CORE" "ETIMEDOUT" "gensym" "string-size" "condition?" "get-signal-handler-mask" "hash-table-pop!" "with-module" "SCM_UVECTOR_U64" "EL2NSYNC" "EPFNOSUPPORT" "condition" "tree-map-fold-right" "<hash-table-meta>" "every" "<s8vector>" "^f" "string-fill!" "filter$" "EADV" "^r" "sys-fdset" "sort-by!" "round->exact" "string-pointer?" "find-module" "read-block" "ESRMNT" "list-tail" "sys-signal-name" "iota" "hash-table-delete!" "EKEYEXPIRED" "SCM_UVECTOR_U16" "object-equal?" "flush" "ENXIO" "<foreign-pointer>" "append!" "tree-map-values" "slot-ref" "sys-ftruncate" "<vector>" "^i" "find-tail$" "E2BIG" "current-load-path" "slot-definition-setter" "sort-applicable-methods" "byte-ready?" "ESHUTDOWN" "sys-sigset-add!" "sys-setsid" "hash-table-num-entries" "EIO" "inline-stub" "slot-unbound" "ENOTNAM" "acons" "sys-getcwd" "<gloc>" "use" "delete!" "sys-unlink" "^l" "member$" "char-title-case?" "delete-keyword" "standard-output-port" "min&max" "imag-part" "EREMOTE" "call-with-output-string" "class-direct-methods" "sys-user-name->uid" "make-weak-vector" "update-direct-method!" "EILSEQ" "ENOTBLK" "proper-list?" "<serious-compound-condition>" "<string-pointer>" "applicable?" "sys-utime" "char->ucs" "fold-right" "quotient&remainder" "SIGPWR" "log10" "gauche-architecture" "syntax-error" "EFBIG" "tree-map-successor-key" "compute-cpl" "copy-bit" "regexp?" "ENOSPC" "define-reader-directive" "<io-closed-error>" "assv" "sys-fchmod" "with-ports" "<regmatch>" "define-module" "raise" "arity-at-least?" "begin0" "write-with-shared-structure" "fixnum-width" "eager" "slot-set-using-accessor!" "*." "assoc-set!" "SIGPROF" "regexp-unparse" "sort" "fmod" "drop-right!" "tree-map-predecessor" "allocate-instance" "EDOTDOT" "cosh" "sys-setrlimit" "debug-print-pre" "ENOMSG" "<io-error>" "F_OK" "file-is-directory?" "sys-getlogin" "<read-context>" "ref*" "get-output-string" "values->list" "<coding-aware-port>" "open-coding-aware-port" "flonum?" "logcount" "with-signal-handlers" "module-imports" "SIGURG" "library-fold" "char-set-complement" "EDEADLK" "tree-map-floor-value" "check-arg" "string-incomplete->complete" "sys-putenv" "<weak-vector-meta>" "atanh" "ENOLCK" "sys-mktime" "<promise>" "generator-map" "dotimes" "while" "rxmatch-start" "hash-table" "receive" "macroexpand-1" "lognot" "module?" "SIGSTOP" "library-has-module?" "touch-instance!" "split-at" "<f32vector-meta>" "port->sexp-list" "procedure-info" "ENODEV" "sys-difftime" "string-immutable?" "<unhandled-signal-error>" "open-output-fd-port" "<rational>" "sys-setpgid" "hash-table?" "unwind-protect" "read-with-shared-structure" "<method>" "glob" "sys-umask" "cond-expand" "SIGTERM" "format" "make-condition" "tree-map-num-entries" "closure?" "generator->lseq" "ENOANO" "port-for-each" "sys-clearenv" "time->seconds" "sys-getuid" "<complex>" "<unknown>" "profiler-show-load-stats" "make-glob-fs-fold" "rxmatch" "sys-pipe" "alist-delete!" "SIGSEGV" "sys-mkfifo" "LC_NUMERIC" "sys-system" "eval-when" "sys-symlink" "tree-map-update!" "ENETDOWN" "RAND_MAX" "make-module" "profiler-stop" "<condition>" "vm-dump" "sys-gettimeofday" "<syntax-rules>" "sys-dirname" "rxmatch-before" "compare" "ECONNABORTED" "<char>" "sys-stat->dev" "report-error" "read-from-string" "class-slot-ref" "&message" "SEEK_CUR" "SIGBUS" "RLIMIT_STACK" "LC_ALL" "<terminated-thread-exception-meta>" "sys-ctermid" "tree-map?" "rassoc-ref" "EMSGSIZE" "<collection>" "^u" "sys-wait-termsig" "<thread>" "exit" "<macro>" "<s64vector-meta>" "take-right" "ECANCELED" "sys-stat->uid" "<top>" "&i/o-port-error" "let-keywords" "RLIMIT_NPROC" "SIGILL" "sys-getgrgid" "<next-method>" "define-method" "ref" "sys-remove" "hash-table-map" "update-direct-subclass!" "ELOOP" "gauche-site-library-directory" "^x" "sys-waitpid" "regexp-replace-all" "<autoload>" "read-char-set" "<s32vector-meta>" "sys-select" "EBADRQC" "pa$" "sys-stat->ctime" "&read-error" "drop*" "RLIMIT_MEMLOCK" "regexp-parse" "<sys-sigset>" "EUSERS" "<thread-exception-meta>" "sys-sigsuspend" "hash-table-stat" "filter" "define-in-module" "uvector-immutable?" "object-+" "ELIBEXEC" "$" "keyword?" "dynamic-load" "ERANGE" "tree-map-min" "<pair>" "<s16vector-meta>" "sys-fdset-set!" "count$" "EBADF" "class-direct-slots" "merge!" "string-pointer-substring" "RLIMIT_CPU" "condition-has-type?" "ETOOMANYREFS" "get-signal-handlers" "delete-keywords!" "EL3HLT" "SCM_UVECTOR_F16" "change-class" "current-load-history" "EPIPE" "tree-map-fold" "<keyword>" "<s8vector-meta>" "reduce-right$" "EAFNOSUPPORT" "sys-realpath" "slot-definition-option" "sort-by" "decode-float" "string-pointer-ref" "pop!" "read-list" "ESTALE" "list-ref" "sys-kill" "hash-table-exists?" "EKEYREJECTED" "alist-copy" "SCM_UVECTOR_S32" "dec!" "object-compare" "flush-all-ports" "EOPNOTSUPP" "tree-map-keys" "<char-set>" "slot-set!" "delete-duplicates" "sys-crypt" "<vector-meta>" "string-byte-set!" "find$" "EACCES" "autoload" "slot-definition-accessor" "apply-methods" "floor->exact" "ESOCKTNOSUPPORT" "length" "read-byte" "last" "sys-setuid" "class-slot-definition" "sys-sigset-delete!" "if-let1" "hash-table-clear!" "symbol-interned?" "SCM_UVECTOR_S8" "undefined?" "slot-ref-using-class" "EISCONN" "ENOTSOCK" "sys-getegid" "write-byte" "last-pair" "<gloc-meta>" "sys-isatty" "let-keywords*" "delete$" "default-endian" "char-titlecase" "slot-definition-name" "magnitude" "EREMOTEIO" "class-direct-subclasses" "SIG_SETMASK" "call-with-input-string" "weak-vector-length" "EINPROGRESS" "method-more-specific?" "rxmatch-if" "ENOTCONN" "<procedure>" "dotted-list?" "<string-pointer-meta>" "foreign-pointer-attributes" "rassoc" "define-constant" "every-pred" "sys-times" "gauche-character-encoding" "char-set?" "make-rectangular" "^b" "rec" "^n" "sys-getpwuid" "gauche-library-directory" "EHOSTDOWN" "tree-map-successor-value" "compute-slots" "logbit?" "regmatch?" "ENOSR" "<sys-tm>" "read-reference?" "<io-unit-error>" "<slot-accessor>" "sys-chown" "assq" "slot-push!" "<regmatch-meta>" "<arity-at-least>" "digit->integer" "least-fixnum" "define-condition-type" "slot-initialize-using-accessor!" "promise-kind" "-." "^e" "assq-set!" "SIGWINCH" "^q" "frexp" "gc-stat" "tree-map-predecessor-key" "EDQUOT" "initialize" "sinh" "debug-source-info" "ENONET" "<port-error>" "sys-access" "sys-link" "<read-reference>" "~" "delete-keyword!" "error" "load-from-port" "monotonic-merge" "^-generator" "finite?" "integer-length" "^h" "make-keyword" "module-exports" "<%box>" "SIGXCPU" "port-type" "make-byte-string" "EDEADLOCK" "tree-map-ceiling" "acosh" "sys-strerror" "<weak-hash-table>" "time" "ENOLINK" "R_OK" "<promise-meta>" "get-output-byte-string" "slices" "generator-for-each" "rxmatch-end" "redefine-class!" "unwrap-syntax" "find-tail" "logand" "^k" "module-name" "SIGTSTP" "library-exists?" "change-object-class" "tree-map-clear!" "split-at!" "<f64vector>" "ENOENT" "port->string-list" "sys-strftime" "sys-getpgid" "open-input-buffered-port" "<rational-meta>" "read/ss" "sys-sleep" "SIGSTKFLT" "standard-error-port" "condition-type?" "global-variable-bound?" "toplevel-closure?" "ENOBUFS" "port-fold-right" "<sys-stat>" "<error>" "vm-set-default-exception-handler" "seconds->time" "<complex-meta>" "sys-getpid" "eq-hash" "<object>" "glob-component->regexp" "sys-close" "format/ss" "has-setter?" "SIGUSR2" "sys-fstat" "LC_TIME" "sys-random" "tree-map-push!" "port-tell" "sys-environ" "module-name->path" "profiler-reset" "ENETRESET" "rxmatch->string" "<condition-meta>" "current-microseconds" "vm-get-stack-trace" "<syntax-rules-meta>" "rxmatch-after" "define-inline" "sys-stat->ino" "<char-meta>" "current-exception-handler" "^p" "class-slot-bound?" "&condition" "SEEK_END" "SIGFPE" "values-ref" "RLIMIT_OFILE" "LC_COLLATE" "class-precedence-list" "<uncaught-exception>" "sys-exit" "tree-map-get" "rassq-ref" "<sequence>" "EMULTIHOP" "sys-wait-stopped?" "regexp-quote" "<macro-meta>" "<u64vector>" "update!" "ECHILD" "<bottom>" "sys-stat->size" "any" "&i/o-error" "cut" "RLIMIT_RSS" "SIGTRAP" "sys-getgrnam" "<accessor-method>" "<abandoned-mutex-exception-meta>" "sys-rename" "hash-table->alist" "assoc-ref" "class-redefinition" "EMEDIUMTYPE" "sys-tmpdir" "gauche-site-architecture-directory" "sys-wait-exited?" "port-current-line" "<autoload-meta>" "char-set-contains?" "sys-select!" "<u32vector>" "get-keyword*" "complement" "EBADSLT" "sys-stat->mtime" "file-is-regular?" "&i/o-closed-error" "null-list?" "SIGHUP" "let/cc" "guard" "RLIMIT_MSGQUEUE" "regexp-compile" "<join-timeout-exception>" "EWOULDBLOCK" "sys-sigwait" "delete" "object--" "ELIBMAX" "getter-with-setter" "provide" "tree-map-empty?" "<pair-meta>" "<u16vector>" "map*" "sys-fdset-max-fd" "sys-environ->alist" "apply$" "EBADFD" "with-output-to-string" "merge" "regexp->string" "program" "string-pointer-index" "RLIMIT_DATA" "make-compound-condition" "ETXTBSY" "warn" "set-signal-pending-limit" "hash-table-copy" "SCM_UVECTOR_F32" "identifier?" "EL3RST" "<module>" "EPROTO" "<keyword-meta>" "current-load-next" "tree-map-pop-max!" "<sys-fdset>" "fold" "<u8vector>" "reduce$" "EAGAIN" "with-input-from-port" "stable-sort!" "string-pointer-next!" "RLIM_INFINITY" "port->byte-string" "ESTRPIPE" "memq" "set-signal-handler!" "hash-table-update!" "SCM_UVECTOR_U32" "EKEYREVOKED" "object-hash" "EOVERFLOW" "tree-map-for-each" "<sys-passwd>" "<char-set-meta>" "<uvector>" "string-byte-ref" "EADDRINUSE" "sys-fdset->list" "remove$" "^t" "stable-sort-by!" "ceiling->exact" "peek-byte" "ESPIPE" "append" "string-join" "extend" "sys-sigset-fill!" "sys-getgroups" "hash-table-get" "string->uninterned-symbol" "SCM_UVECTOR_U8" "slot-set-using-class!" "EISDIR" "ENOTTY" "define-cproc" "list-copy" "with-error-handler" "alist->tree-map" "write-limited" "sys-getgid" "setter" "is-a?" "<tree-map>" "sys-ttyname" "every$" "^w" "char-foldcase" "class-slot-accessor" "angle" "string-incomplete->complete!" "ERESTART" "call-with-string-io" "slot-definition-options" "SIG_BLOCK" "let-optionals*" "make-hash-table" "weak-vector-ref" "EINTR" "apply-generic" "circular-list?" "ENOTDIR" "sys-exec" "slot-exists-using-class?" "<symbol>" "foreign-pointer-attribute-get" "any-pred" "^z" "sys-uname" "supported-character-encodings" "char-set" "current-error-port" "make-polar" "sys-getpwnam" "class-name" "gauche-architecture-directory" "EHOSTUNREACH" "compute-get-n-set" "logtest" "ENOSTR" "read-reference-has-value?" "<compound-condition>" "sys-lchown" "slot-bound?" "<string>" "string-scan" "procedure-arity-includes?" "rlet1"))
))
